@model Topics.Models.TopicModel

<div class="modal fade" id="modal-create-topic" tabindex="-1" aria-labelledby="create topic" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Create new Topic</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">


            @using (Html.BeginForm("Create", "Topic", FormMethod.Post, new { enctype = "multipart/form-data", id = "form-create-topic" }))
            {
                @Html.AntiForgeryToken()

                <div class="form d-flex flex-column align-items-center row gy-3">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group d-flex flex-column w-100 col">
                        <div class="align-self-center">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10 w-75 align-self-center">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = true } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-flex flex-column w-100 col">
                        <div class="align-self-center">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10 w-75 align-self-center">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", required = true } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-flex flex-column" w-100 col>
                        <div class="align-self-center">
                            @Html.LabelFor(model => model.CoverImgName, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10 w-75 align-self-center">
                            @Html.TextBoxFor(model => model.CoverImg, htmlAttributes: new { @class = "form-control", type = "file", required = true, accept = "image/*" })
                            @Html.ValidationMessageFor(model => model.CoverImgName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-flex flex-column" w-100 col>
                        <div class="align-self-center">
                            @Html.LabelFor(model => model.AvatarImgName, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10 w-75 align-self-center" ">
                            @Html.TextBoxFor(model => model.AvatarImg, htmlAttributes: new { @class = "form-control", type = "file", required = true, accept = "image/*" })
                            @Html.ValidationMessageFor(model => model.AvatarImgName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-flex flex-column" w-100 col>
                        <div class="align-self-center">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10 w-75 align-self-center" ">
                            @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", type = "file", required = true })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }
            </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button form="form-create-topic" type="submit" class="btn btn-primary">Create</button>
                </div>
            </div>
        </div>
    </div>
