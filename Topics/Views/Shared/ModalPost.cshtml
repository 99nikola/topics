@model Topics.Models.ModalPostModel



<div class="modal fade" id="modal-@Model.Id" tabindex="-1" aria-labelledby="create post" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@Model.Label</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                @using (Html.BeginForm(Model.Action.ToString(), "Post", FormMethod.Post, new { enctype = "multipart/form-data", id = "form-" + Model.Id }))
                {
                    @Html.AntiForgeryToken()
                   
                    @Html.EditorFor(model => model.Post.Id, new { htmlAttributes = new { type = "hidden" } })
                    @Html.EditorFor(model => model.Post.TopicName, new { htmlAttributes = new { type = "hidden" } })
    

                    <div class="form d-flex flex-column align-items-center row gy-3">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group d-flex flex-column w-100 col">
                            <div class="align-self-center">
                                @Html.LabelFor(model => model.Post.Slug, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            <div class="col-md-10 w-75 align-self-center">
                                @Html.EditorFor(model => model.Post.Slug, new { htmlAttributes = new { @class = "form-control", required = true } })
                                @Html.ValidationMessageFor(model => model.Post.Slug, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group d-flex flex-column w-100 col">
                            <div class="align-self-center">
                                @Html.LabelFor(model => model.Post.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            <div class="col-md-10 w-75 align-self-center">
                                @Html.EditorFor(model => model.Post.Title, new { htmlAttributes = new { @class = "form-control", required = true } })
                                @Html.ValidationMessageFor(model => model.Post.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group d-flex flex-column" w-100 col>
                            <div class="align-self-center">
                                @Html.LabelFor(model => model.Post.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            <div class="col-md-10 w-75 align-self-center">
                                @Html.TextAreaFor(model => model.Post.Content, htmlAttributes: new { @class = "form-control", type = "file", required = true, accept = "image/*" })
                                @Html.ValidationMessageFor(model => model.Post.Content, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>}
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button form="form-@Model.Id" type="submit" class="btn btn-primary">@Model.Action.ToString()</button>
            </div>
        </div>
    </div>
</div>
