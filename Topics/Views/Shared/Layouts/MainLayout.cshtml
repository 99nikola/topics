
@{
    Layout = null;
    string controllerName = ViewContext.RouteData.Values["controller"].ToString().ToLower();
    string actionName = ViewContext.RouteData.Values["action"].ToString().ToLower();
}
@using Topics.Models;

<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title</title>


    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
    <link href="~/Styles/index.css" rel="stylesheet" />

</head>
<body>
    <header class="p-3 bg-dark text-white position-sticky top-0 z-index-2">
        <div class="container">
            <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start">
                <ul class="nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0">
                    <li>
                        <a href="/" class="nav-link px-2
                           @if (controllerName.Equals("home") && actionName.Equals("index")) { Write("text-primary"); }
                           else { Write("text-white"); }">
                            Home
                        </a>
                    </li>
                    <li>
                        <a href="/topic" class="nav-link px-2
                           @if (controllerName.Equals("topic") && actionName.Equals("index")) { Write("text-primary"); }
                           else { Write("text-white"); }">
                            Topics
                        </a>
                    </li>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li>
                            <div type="button" class="nav-link mx-2 text-white border border-white rounded" data-bs-toggle="modal" data-bs-target="#modal-create-topic">
                                Create Topic
                            </div>
                        </li>
                        if (controllerName.Equals("topic") && actionName.Equals("get"))
                        {       
                            <li>
                                <div type="button" class="nav-link mx-2 text-white border border-white rounded" data-bs-toggle="modal" data-bs-target="#modal-create-post">
                                    Create Post
                                </div>
                            </li>
                        }
                    }

                </ul>

                <form class="col-12 col-lg-auto mb-3 mb-lg-0 me-lg-3">
                    <input type="search" class="form-control form-control-dark" placeholder="Search..." aria-label="Search">
                </form>

                <div class="text-end">

                    @if (User.Identity.IsAuthenticated)
                    {
                        <button type="button" class="btn btn-warning" id="sign-out">Sign-Out</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-warning" id="sign-up">Sign-Up</button>
                        <button type="button" class="btn btn-outline-light me-2" id="sign-in">Sign-In</button>
                    }
                </div>
            </div>
        </div>
    </header>
    <main>
        @if (User.Identity.IsAuthenticated)
        {
            @Html.Partial("~/Views/Shared/ModalTopic.cshtml", new Topics.Models.ModalTopicModel() { Id = "create-topic", Label = "Create Topic", Action = ActionType.Create, Topic = new TopicModel() })

            if (controllerName.Equals("topic") && actionName.Equals("get"))
            {
                @Html.Partial("~/Views/Shared/ModalPost.cshtml", new Topics.Models.ModalPostModel() { Id = "create-post", Label = "Create Post", Action = ActionType.Create, Post = new PostModel()})
            }
        }
        @RenderBody()
    </main>

    <script>
        const signIn = document.getElementById("sign-in");
        if (signIn !== null) signIn.addEventListener("click", () => location.href = "/signin");

        const signUp = document.getElementById("sign-up");
        if (signUp !== null) signUp.addEventListener("click", () => location.href = "/signup");

        const signOut = document.getElementById("sign-out");
        if (signOut !== null) signOut.addEventListener("click", () => location.href = "/signout");
    </script>
    <script src="~/Scripts/bootstrap.min.js"></script>
</body>
</html>
