
@using Topics.Models;
@using System.Collections.Generic;

@model Topics.Models.PostList


<div class="row row-cols-1 g-3 m-5">

    @foreach (Post post in Model.Posts)
    {
        <div class="d-flex g-0 border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative">
            <div class="d-flex flex-column align-items-center width-max-content mx-3 my-2">
                <a href="@Url.Action("UpVote/" + post.Slug, "Post")"
                   class="text-decoration-none">
                    @if (ViewBag.UpVotedPosts.Contains(post.Slug))
                    {
                        <i class="bi bi-arrow-up-square-fill arrow-icon text-success"></i>
                    }
                    else 
                    { 
                        <i class="bi bi-arrow-up-square arrow-icon text-black-50"></i>
                    }
                </a>
                @(post.UpVotes - post.DownVotes)
                <a href="@Url.Action("DownVote/" + post.Slug, "Post")" 
                   class="text-decoration-none">
                    @if (ViewBag.DownVotedPosts.Contains(post.Slug))
                    {
                        <i class="bi bi-arrow-down-square-fill arrow-icon text-danger"></i>
                    }
                    else 
                    { 
                        <i class="bi bi-arrow-down-square arrow-icon text-black-50"></i>
                    }
                </a>
            </div>

            <div class="p-3 d-flex flex-column position-static">
                <a href="@Url.Action("Get/" + post.TopicName, "Topic")" class="width-max-content">
                    <strong class="d-inline-block text-secondary">@@@post.TopicName</strong>
                </a>
                <h3 class="mb-0">@post.Title</h3>
                <div class="mb-1 text-muted">@post.DateCreated.ToString("dd/MM/yyyy")</div>
                <a href="@Url.Action("View/" + post.Slug, "Post")" class="text-decoration-none text-dark position-relative" name="post-body">
                    <span name="span-child" class="bottom-0 position-absolute bg-light p-2 text-center opacity-95 w-100">Click to see a detailed view</span>
                    <p class="card-text mb-auto m-h-100">@post.Content</p>
                </a>
                <a href="@Url.Action("View/" + post.Slug, "Post", new { section = "comments" })" class="card-footer bg-white d-flex gap-3 text-decoration-none text-dark width-max-content">
                    <span class="border p-1 cursor-pointer rounded">
                        <i class="bi bi-chat-square"></i>
                        Comments
                    </span>
                </a>
            </div>
        </div>
    }
       
</div>


<script>
    const postsBody = document.getElementsByName("post-body");

    postsBody.forEach(postBody => {
        if (postBody.clientHeight >= 100) return;

        const span = postBody.children.namedItem("span-child");
        span.style.visibility = "hidden";
    })
</script>
